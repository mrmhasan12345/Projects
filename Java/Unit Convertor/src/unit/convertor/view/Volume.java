/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unit.convertor.view;

/**
 *
 * @author Pesan
 */
public class Volume extends javax.swing.JFrame {

    /**
     * Creates new form Volume
     */
    public Volume() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        output = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        menu = new javax.swing.JButton();
        convert = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        inUnit = new javax.swing.JComboBox<>();
        outUnit = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Volume Converter");
        setLocation(new java.awt.Point(275, 200));
        setMaximizedBounds(new java.awt.Rectangle(275, 200, 275, 200));
        setMinimumSize(new java.awt.Dimension(700, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        output.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        output.setForeground(new java.awt.Color(255, 255, 255));
        output.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(output, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, 220, 20));
        getContentPane().add(input, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 129, 120, -1));

        menu.setText("Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });
        getContentPane().add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 341, 95, 35));

        convert.setText("Convert");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });
        getContentPane().add(convert, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 222, 95, 35));

        title.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Volume");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 50, 650, -1));

        inUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Input Unit", "Millilitres(cc)", "Litres", "Cubic Metres", "Pints" }));
        inUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inUnitActionPerformed(evt);
            }
        });
        getContentPane().add(inUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 129, -1, -1));

        outUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Output Unit", "Millilitres(cc)", "Litres", "Cubic Metres", "Pints" }));
        getContentPane().add(outUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unit/convertor/view/vol.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
        // TODO add your handling code here:
        String sInput = input.getText();
        String sInUnit = inUnit.getSelectedItem().toString();
        String sOutUnit = outUnit.getSelectedItem().toString();

        if (sInput.equals("")){
            output.setText("Please Enter a Value to Convert");
        }
        else {

            if (sInUnit=="Cubic Centimeters(mL)"){
                if (sOutUnit=="Cubic Centimeters(mL)"){
                    double cucm2cucm = Double.parseDouble(sInput);
                    output.setText(Double.toString(cucm2cucm));
                }
                else if (sOutUnit=="Cubic Decimeters(L)"){
                    double cucm2cudm = (Double.parseDouble(sInput)/1000);
                    output.setText(Double.toString(cucm2cudm));
                }
                else if (sOutUnit=="Cubic Metres"){
                    double cucm2cum = (Double.parseDouble(sInput)/1000000);
                    output.setText(Double.toString(cucm2cum));
                }
            
                else {
                    output.setText("Please Select an Output Unit");
                }
            }
            else if (sInUnit=="Cubic Decimeters(L)"){
                if (sOutUnit=="Cubic Centimeters(mL)"){
                    double cudm2cucm = Double.parseDouble(sInput)*1000;
                    output.setText(Double.toString(cudm2cucm));
                }
                else if (sOutUnit=="Cubic Decimeters(L)"){
                    double cudm2cudm = Double.parseDouble(sInput);
                    output.setText(Double.toString(cudm2cudm));
                }
                else if (sOutUnit=="Cubic Meters"){
                    double cudm2cum = Double.parseDouble(sInput)/1000;
                    output.setText(Double.toString(cudm2cum));
                }
                else {
                    output.setText("Please Select an Output Unit");
                }
            }
            else if (sOutUnit=="Cubic Meters") {
                if (sOutUnit=="Cubic Centimeters(mL)"){
                    double cum2cucm = Double.parseDouble(sInput)*1000000;
                    output.setText(Double.toString(cum2cucm));
                }
                else if (sOutUnit=="Cubic Decimeters(L)"){
                    double cum2cudm = Double.parseDouble(sInput)*1000;
                    output.setText(Double.toString(cum2cudm));
                }
                else if (sOutUnit=="Cubic Meters"){
                    double cum2cum = Double.parseDouble(sInput);
                    output.setText(Double.toString(cum2cum));
                }
                else {
                    output.setText("Please Select an Output Unit");
                }
            }
            else{
                output.setText("Please Select an Input Unit");
            }
        }
    }//GEN-LAST:event_convertActionPerformed

    private void inUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inUnitActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        // TODO add your handling code here:
        Menu menu = new Menu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Volume.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Volume().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convert;
    private javax.swing.JComboBox<String> inUnit;
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton menu;
    private javax.swing.JComboBox<String> outUnit;
    private javax.swing.JLabel output;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}

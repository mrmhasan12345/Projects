/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unit.convertor.view;

/**
 *
 * @author Pesan
 */
public class Time extends javax.swing.JFrame {

    /**
     * Creates new form Time
     */
    public Time() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inUnit = new javax.swing.JComboBox<>();
        outUnit = new javax.swing.JComboBox<>();
        output = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        menu = new javax.swing.JButton();
        convert = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Time Converter");
        setLocation(new java.awt.Point(275, 200));
        setMaximizedBounds(new java.awt.Rectangle(275, 200, 275, 200));
        setMaximumSize(new java.awt.Dimension(700, 400));
        setMinimumSize(new java.awt.Dimension(700, 400));
        setModalExclusionType(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Input Unit", "Seconds", "Miniutes", "Hours", "Days", "Weeks", "Months", "Years" }));
        getContentPane().add(inUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        outUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Output Unit", "Seconds", "Miniutes", "Hours", "Days", "Weeks", "Months", "Years" }));
        getContentPane().add(outUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, -1, -1));

        output.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        output.setForeground(new java.awt.Color(255, 255, 255));
        output.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(output, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 130, 210, 30));
        getContentPane().add(input, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 120, -1));

        menu.setText("Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });
        getContentPane().add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 95, 35));

        convert.setText("Convert");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });
        getContentPane().add(convert, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 223, 95, 35));

        title.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Time");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 680, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unit/convertor/view/images.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        // TODO add your handling code here:
        Menu menu = new Menu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
        // TODO add your handling code here:
        String sInput = input.getText();
        String sInUnit = inUnit.getSelectedItem().toString();
        String sOutUnit = outUnit.getSelectedItem().toString();

        if (sInput.equals("")){
            output.setText("Please Enter a Value to Convert");
        }
        else {

            if (sInUnit=="Seconds"){
                if (sOutUnit=="Seconds"){
                    double s2s = Double.parseDouble(sInput);
                    output.setText(Double.toString(s2s));
                }
                else if (sOutUnit=="Miniutes"){
                    double s2min = Double.parseDouble(sInput)/60;
                    output.setText(Double.toString(s2min));
                }
                else if (sOutUnit=="Hours"){
                    double s2hrs = Double.parseDouble(sInput)/3600;
                    output.setText(Double.toString(s2hrs));

                }
                else if (sOutUnit=="Days"){
                    double s2d = Double.parseDouble(sInput)/3600/24;
                    output.setText(Double.toString(s2d));
                }
                else if (sOutUnit=="Weeks"){
                    double s2w = Double.parseDouble(sInput)/3600/24/7;
                    output.setText(Double.toString(s2w));
                }
                else if (sOutUnit=="Months"){
                    double s2mon = Double.parseDouble(sInput)/3600/24/30;
                    output.setText(Double.toString(s2mon));
                }
                else if (sOutUnit=="Years"){
                    double s2yrs = Double.parseDouble(sInput)/3600/24/365;
                    output.setText(Double.toString(s2yrs));
                }

                else {
                    output.setText("Please Select an Output Unit");
                }
            }

            else if (sInUnit=="Miniutes"){
                if (sOutUnit=="Seconds"){
                    double min2s = Double.parseDouble(sInput)*60;
                    output.setText(Double.toString(min2s));
                }
                else if (sOutUnit=="Miniutes"){
                    double min2min = Double.parseDouble(sInput);
                    output.setText(Double.toString(min2min));
                }
                else if (sOutUnit=="Hours"){
                    double min2hrs = Double.parseDouble(sInput)/60;
                    output.setText(Double.toString(min2hrs));

                }
                else if (sOutUnit=="Days"){
                    double min2d = Double.parseDouble(sInput)/60/24;
                    output.setText(Double.toString(min2d));
                }
                else if (sOutUnit=="Weeks"){
                    double min2w = Double.parseDouble(sInput)/60/24/7;
                    output.setText(Double.toString(min2w));
                }
                else if (sOutUnit=="Months"){
                    double min2mon = Double.parseDouble(sInput)/60/24/30;
                    output.setText(Double.toString(min2mon));
                }
                else if (sOutUnit=="Years"){
                    double mon2yrs = Double.parseDouble(sInput)/60/24/365;
                    output.setText(Double.toString(mon2yrs));
                }

                else {
                    output.setText("Please Select an Output Unit");
                }
            }

            else if (sInUnit=="Hours"){
                if (sOutUnit=="Seconds"){
                    double hrs2s = Double.parseDouble(sInput)*3600;
                    output.setText(Double.toString(hrs2s));
                }
                else if (sOutUnit=="Miniutes"){
                    double hrs2min = Double.parseDouble(sInput)*60;
                    output.setText(Double.toString(hrs2min));
                }
                else if (sOutUnit=="Hours"){
                    double hrs2hrs = Double.parseDouble(sInput);
                    output.setText(Double.toString(hrs2hrs));

                }
                else if (sOutUnit=="Days"){
                    double hrs2d = Double.parseDouble(sInput)/24;
                    output.setText(Double.toString(hrs2d));
                }
                else if (sOutUnit=="Weeks"){
                    double hrs2w = Double.parseDouble(sInput)/24/7;
                    output.setText(Double.toString(hrs2w));
                }
                else if (sOutUnit=="Months"){
                    double hrs2mon = Double.parseDouble(sInput)/24/30;
                    output.setText(Double.toString(hrs2mon));
                }
                else if (sOutUnit=="Years"){
                    double hrs2yrs = Double.parseDouble(sInput)/24/365;
                    output.setText(Double.toString(hrs2yrs));
                }

                else {
                    output.setText("Please Select an Output Unit");
                }
            }

            else if (sInUnit=="Days"){
                if (sOutUnit=="Seconds"){
                    double d2s = Double.parseDouble(sInput)*24*3600;
                    output.setText(Double.toString(d2s));
                }
                else if (sOutUnit=="Miniutes"){
                    double d2min = Double.parseDouble(sInput)*24*60;
                    output.setText(Double.toString(d2min));
                }
                else if (sOutUnit=="Hours"){
                    double d2hrs = Double.parseDouble(sInput)*24;
                    output.setText(Double.toString(d2hrs));

                }
                else if (sOutUnit=="Days"){
                    double d2d = Double.parseDouble(sInput);
                    output.setText(Double.toString(d2d));
                }
                else if (sOutUnit=="Weeks"){
                    double d2w = Double.parseDouble(sInput)/7;
                    output.setText(Double.toString(d2w));
                }
                else if (sOutUnit=="Months"){
                    double d2m = Double.parseDouble(sInput)/30;
                    output.setText(Double.toString(d2m));
                }
                else if (sOutUnit=="Years"){
                    double d2yrs = Double.parseDouble(sInput)/365;
                    output.setText(Double.toString(d2yrs));
                }

                else {
                    output.setText("Please Select an Output Unit");
                }
            }

            else if (sInUnit=="Weeks"){
                if (sOutUnit=="Seconds"){
                    double w2s = Double.parseDouble(sInput)*7*24*3600;
                    output.setText(Double.toString(w2s));
                }
                else if (sOutUnit=="Miniutes"){
                    double w2min = Double.parseDouble(sInput)*7*24*60;
                    output.setText(Double.toString(w2min));
                }
                else if (sOutUnit=="Hours"){
                    double w2hrs = Double.parseDouble(sInput)*7*24;
                    output.setText(Double.toString(w2hrs));

                }
                else if (sOutUnit=="Days"){
                    double w2d = Double.parseDouble(sInput)*7;
                    output.setText(Double.toString(w2d));
                }
                else if (sOutUnit=="Weeks"){
                    double w2w = Double.parseDouble(sInput);
                    output.setText(Double.toString(w2w));
                }
                else if (sOutUnit=="Months"){
                    double w2mon = Double.parseDouble(sInput)*7/30;
                    output.setText(Double.toString(w2mon));
                }
                else if (sOutUnit=="Years"){
                    double w2yrs = Double.parseDouble(sInput)*7/365;
                    output.setText(Double.toString(w2yrs));
                }

                else {
                    output.setText("Please Select an Output Unit");
                }
            }

            else if (sInUnit=="Months"){
                if (sOutUnit=="Seconds"){
                    double mon2s = Double.parseDouble(sInput)*30*24*3600;
                    output.setText(Double.toString(mon2s));
                }
                else if (sOutUnit=="Miniutes"){
                    double mon2min = Double.parseDouble(sInput)*30*24*60;
                    output.setText(Double.toString(mon2min));
                }
                else if (sOutUnit=="Hours"){
                    double mon2hrs = Double.parseDouble(sInput)*30*24;
                    output.setText(Double.toString(mon2hrs));

                }
                else if (sOutUnit=="Days"){
                    double mon2d = Double.parseDouble(sInput)*30;
                    output.setText(Double.toString(mon2d));
                }
                else if (sOutUnit=="Weeks"){
                    double mon2w = Double.parseDouble(sInput)*30/7;
                    output.setText(Double.toString(mon2w));
                }
                else if (sOutUnit=="Months"){
                    double mon2mon = Double.parseDouble(sInput);
                    output.setText(Double.toString(mon2mon));
                }
                else if (sOutUnit=="Years"){
                    double mon2yrs = Double.parseDouble(sInput)/12;
                    output.setText(Double.toString(mon2yrs));
                }

                else {
                    output.setText("Please Select an Output Unit");
                }
            }
            else if (sInUnit=="Years"){
                if (sOutUnit=="Seconds"){
                    double yrs2s = Double.parseDouble(sInput)*365*24*3600;
                    output.setText(Double.toString(yrs2s));
                }
                else if (sOutUnit=="Miniutes"){
                    double yrs2min = Double.parseDouble(sInput)*365*24*60;
                    output.setText(Double.toString(yrs2min));
                }
                else if (sOutUnit=="Hours"){
                    double yrs2hrs = Double.parseDouble(sInput)*365*24;
                    output.setText(Double.toString(yrs2hrs));

                }
                else if (sOutUnit=="Days"){
                    double yrs2d = Double.parseDouble(sInput)*365;
                    output.setText(Double.toString(yrs2d));
                }
                else if (sOutUnit=="Weeks"){
                    double yrs2w = Double.parseDouble(sInput)*365/7;
                    output.setText(Double.toString(yrs2w));
                }
                else if (sOutUnit=="Months"){
                    double yrs2mon = Double.parseDouble(sInput)*12;
                    output.setText(Double.toString(yrs2mon));
                }
                else if (sOutUnit=="Years"){
                    double yrs2yrs = Double.parseDouble(sInput);
                    output.setText(Double.toString(yrs2yrs));
                }

                else {
                    output.setText("Please Select an Output Unit");
                }
            }
            else {
                output.setText("Please Select an Input Unit");
            }
        }
    }//GEN-LAST:event_convertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (doubleroduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Time.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Time().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convert;
    private javax.swing.JComboBox<String> inUnit;
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton menu;
    private javax.swing.JComboBox<String> outUnit;
    private javax.swing.JLabel output;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}

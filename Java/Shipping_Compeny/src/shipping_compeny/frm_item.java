/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shipping_compeny;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RFSSSFH
 */
public class frm_item extends javax.swing.JFrame {

    /**
     * Creates new form frm_supp
     * @throws java.sql.SQLException
     */
    public frm_item() throws SQLException {
        initComponents();
        fill_itm_tbl();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itm_model = new javax.swing.JTextField();
        itm_chass = new javax.swing.JTextField();
        itm_comp = new javax.swing.JTextField();
        itm_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itm_tbl = new javax.swing.JTable();
        itm_upd = new javax.swing.JButton();
        itm_del = new javax.swing.JButton();
        itm_enter = new javax.swing.JButton();
        itm_back = new javax.swing.JButton();
        itm_id = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        itm_quantity = new javax.swing.JTextField();
        itm_r_price = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        itm_s_price = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frm_supp"); // NOI18N

        jLabel2.setText("Item Id");

        jLabel1.setText("Vehicle part name");

        jLabel5.setText("Chassis number");

        jLabel4.setText("Model(year)");

        jLabel3.setText("Vehicle company");

        itm_tbl.setBackground(new java.awt.Color(204, 255, 255));
        itm_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Vehicle part name", "Vehicle company", "Model(year)", "Chassis number", "Retail Price", "Selling Price", "Quantity"
            }
        ));
        itm_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itm_tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(itm_tbl);

        itm_upd.setLabel("Update");
        itm_upd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_updActionPerformed(evt);
            }
        });

        itm_del.setLabel("Delete");
        itm_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_delActionPerformed(evt);
            }
        });

        itm_enter.setLabel("Add");
        itm_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_enterActionPerformed(evt);
            }
        });

        itm_back.setText("Back");
        itm_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_backActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Matura MT Script Capitals", 3, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 153));
        jLabel6.setText("Item");

        jLabel7.setText("Selling Price");

        jLabel8.setText("Retail Price");

        jLabel9.setText("Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(itm_comp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(itm_model, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(itm_chass))
                            .addGap(33, 33, 33))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(itm_enter)
                            .addGap(18, 18, 18)
                            .addComponent(itm_del)
                            .addGap(18, 18, 18)
                            .addComponent(itm_upd)
                            .addGap(18, 18, 18)
                            .addComponent(itm_back)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itm_name, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(itm_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(itm_r_price, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itm_s_price, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itm_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itm_id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itm_name)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(itm_comp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(itm_model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(itm_chass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(itm_r_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(itm_s_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(itm_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itm_back)
                            .addComponent(itm_upd)
                            .addComponent(itm_del)
                            .addComponent(itm_enter))))
                .addGap(0, 49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
        public void fill_itm_tbl() throws SQLException{
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String thas="SELECT * FROM item";
            ResultSet res=stm.executeQuery(thas);
            
            
           DefaultTableModel model=(DefaultTableModel)itm_tbl.getModel();
            
            Object[] row;
            
            while(res.next()){
            
                row = new Object[8];
                
                row[0]=res.getString("I_Id");
                row[1]=res.getString("I_Name");
                row[2]=res.getString("I_Company");
                row[3]=res.getString("I_Model");
                row[4]=res.getString("I_Chassis");
                row[5]=res.getString("I_Retail_Price");
                row[6]=res.getString("I_Selling_Price");
                row[7]=res.getString("I_Quantity");
                
                
                model.addRow(row);
                
            }
            con.close();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_cust.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }

    
    
    private void itm_updActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_updActionPerformed
        // TODO add your handling code here:
        
        try {
            if(Integer.parseInt(itm_quantity.getText())>0){
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            
            String sql="SELECT I_Quantity FROM item WHERE I_Id='"+itm_id.getText()+"'";
            ResultSet rs=stm.executeQuery(sql);
            rs.next();
            int qun=Integer.parseInt(rs.getString("I_Quantity"))+Integer.parseInt(itm_quantity.getText());
            
            
            
            String upd="UPDATE item SET I_Name='"+itm_name.getText()+"',I_Company='"+itm_comp.getText()+"',I_Model='"+itm_model.getText()+"',I_Chassis='"+itm_chass.getText()+"',I_Retail_Price='"+itm_r_price.getText()+"',I_Selling_Price='"+itm_s_price.getText()+"',I_Quantity='"+qun+"' WHERE I_Id='"+itm_id.getText()+"'";
            stm.executeUpdate(upd);
            
            
            DefaultTableModel model1=(DefaultTableModel) itm_tbl.getModel();
            model1.setRowCount(0);
            fill_itm_tbl();
            clr();
            }
            else if(Integer.parseInt(itm_quantity.getText())<0){
            JOptionPane.showMessageDialog(null,"You were entered a negative value for Quantity");
            }

        } catch (SQLException ex) {
            Logger.getLogger(frm_cust.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_item.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_itm_updActionPerformed

    private void itm_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_delActionPerformed

        
        try {
            int y=JOptionPane.showConfirmDialog(null,"Do you want to delete?","Conform delete",JOptionPane.YES_NO_OPTION);
        
     //   System.out.println("Value is="+y);
        
        if(y==0){
           
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false", "root", "");
            Statement stm=con.createStatement();
            String sql="DELETE FROM item WHERE I_Id='"+itm_id.getText()+"'";
            stm.executeUpdate(sql);
                        
            DefaultTableModel model1=(DefaultTableModel) itm_tbl.getModel();
            model1.setRowCount(0);
            fill_itm_tbl();
            clr();
            
        }

        } catch (SQLException ex) {
            Logger.getLogger(frm_cust.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_item.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_itm_delActionPerformed

    private void itm_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_enterActionPerformed

        try {
            if(Integer.parseInt(itm_quantity.getText())>0){
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String add="INSERT INTO item(I_Name,I_Company,I_Model,I_Chassis,I_Retail_Price,I_Selling_Price,I_Quantity) VALUES ('"+itm_name.getText()+"','"+itm_comp.getText()+"','"+itm_model.getText()+"','"+itm_chass.getText()+"','"+itm_r_price.getText()+"','"+itm_s_price.getText()+"','"+itm_quantity.getText()+"')";
            stm.executeUpdate(add);
            
            
            DefaultTableModel model1=(DefaultTableModel) itm_tbl.getModel();
            model1.setRowCount(0);
            fill_itm_tbl();
            clr();
            
        } else if(Integer.parseInt(itm_quantity.getText())<0){
            JOptionPane.showMessageDialog(null,"You were entered a negative value for Quantity");
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Some errors are occured  "+ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(frm_item.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_itm_enterActionPerformed

    private void itm_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itm_tblMouseClicked
        
        
        int rowIndex=itm_tbl.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel)itm_tbl.getModel();
        itm_id.setText(model.getValueAt(rowIndex,0).toString());
        itm_name.setText(model.getValueAt(rowIndex,1).toString());
        itm_comp.setText(model.getValueAt(rowIndex,2).toString());
        itm_model.setText(model.getValueAt(rowIndex,3).toString());
        itm_chass.setText(model.getValueAt(rowIndex,4).toString());
        itm_r_price.setText(model.getValueAt(rowIndex,5).toString());
        itm_s_price.setText(model.getValueAt(rowIndex,6).toString());
        itm_quantity.setText(model.getValueAt(rowIndex,7).toString());
        
    }//GEN-LAST:event_itm_tblMouseClicked

    private void itm_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_backActionPerformed
        // TODO add your handling code here:
        
        
        frm_home hm=new frm_home();
        hm.setVisible(true);
        
        this.dispose();
        
        
    }//GEN-LAST:event_itm_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frm_item().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frm_item.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    
    public void clr(){
    
            itm_name.setText("");
            itm_comp.setText("");
            itm_model.setText("");
            itm_chass.setText("");
            itm_r_price.setText("");
            itm_s_price.setText("");
            itm_quantity.setText("");
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton itm_back;
    private javax.swing.JTextField itm_chass;
    private javax.swing.JTextField itm_comp;
    private javax.swing.JButton itm_del;
    private javax.swing.JButton itm_enter;
    private javax.swing.JLabel itm_id;
    private javax.swing.JTextField itm_model;
    private javax.swing.JTextField itm_name;
    private javax.swing.JTextField itm_quantity;
    private javax.swing.JTextField itm_r_price;
    private javax.swing.JTextField itm_s_price;
    private javax.swing.JTable itm_tbl;
    private javax.swing.JButton itm_upd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

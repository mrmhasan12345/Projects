/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shipping_compeny;


import com.itextpdf.text.DocumentException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RFSSSFH
 */
public class frm_order extends javax.swing.JFrame {
    
    ArrayList<String> indx_cust = new ArrayList<>();
    ArrayList<String> indx_staff = new ArrayList<>();
    ArrayList<String> indx_item = new ArrayList<>();
    int C_Id,Staff_Id,I_Id,selected_id;
    float selected_amount;

    /**
     * Creates new form frm_order
     */
    public frm_order() {
        
        try {
            
            initComponents();
            fill_ord_c_id();
            fill_ord_staff_id();
            fill_ord_i_id();
            fill_ord_tbl();
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ord_c_id = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        ord_staff_id = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        ord_i_id = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ord_qnty = new javax.swing.JTextField();
        ord_enter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ord_tbl = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        ord_back = new javax.swing.JButton();
        ord_inv = new javax.swing.JButton();
        ord_del = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frm_order"); // NOI18N

        ord_c_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_c_idActionPerformed(evt);
            }
        });

        jLabel1.setText("Customer Name");

        jLabel2.setText("Staff Name");

        ord_staff_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_staff_idActionPerformed(evt);
            }
        });

        jLabel3.setText("Item Name");

        ord_i_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_i_idActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantity");

        ord_enter.setText("Make Order");
        ord_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_enterActionPerformed(evt);
            }
        });

        ord_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Id", "Staff Name", "Customer Name", "Item Name", "Ordered Date", "Quantity", "Price/item", "Total amount"
            }
        ));
        ord_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ord_tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ord_tbl);

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ord_back.setText("Back");
        ord_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_backActionPerformed(evt);
            }
        });

        ord_inv.setText("Invoise");
        ord_inv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_invActionPerformed(evt);
            }
        });

        ord_del.setText("Delete order");
        ord_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ord_delActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ord_c_id, 0, 122, Short.MAX_VALUE)
                                    .addComponent(ord_staff_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ord_i_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ord_qnty)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ord_enter)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(ord_back)))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ord_del)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ord_inv)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ord_staff_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ord_c_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ord_i_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ord_qnty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ord_enter)
                            .addComponent(jButton1)
                            .addComponent(ord_back))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(ord_inv))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ord_del))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ord_c_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_c_idActionPerformed
        
        if(!indx_cust.isEmpty()){
        setC_Id();
        }
    }//GEN-LAST:event_ord_c_idActionPerformed

    private void ord_staff_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_staff_idActionPerformed
        
        if(!indx_staff.isEmpty()){
        setStaff_Id();
        }
    }//GEN-LAST:event_ord_staff_idActionPerformed

    private void ord_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_enterActionPerformed
        
        try {
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String sql="INSERT INTO ord(Staff_Id,C_Id,I_Id,O_Qnty,O_date,O_amount) VALUES ('"+Staff_Id+"','"+C_Id+"','"+I_Id+"','"+ord_qnty.getText()+"','"+getDate()+"','"+getTot()+"')";
            stm.executeUpdate(sql);
//            System.out.println(""+Staff_Id+"/"+C_Id+"/"+I_Id+"/"+getQnty()+"/"+getDate()+"/"+getTot()+"/");
            
            DefaultTableModel model1=(DefaultTableModel) ord_tbl.getModel();
            model1.setRowCount(0);
            fill_ord_tbl();
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_ord_enterActionPerformed

    private void ord_i_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_i_idActionPerformed
        
        if(!indx_item.isEmpty()){
        setI_Id();
        }
    }//GEN-LAST:event_ord_i_idActionPerformed

    private void ord_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_backActionPerformed
        
        frm_home hm=new frm_home();
        hm.setVisible(true);
        
        this.dispose();
        
    }//GEN-LAST:event_ord_backActionPerformed

    private void ord_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ord_tblMouseClicked
        
        try {
            
            int rowIndex=ord_tbl.getSelectedRow();
            DefaultTableModel model=(DefaultTableModel)ord_tbl.getModel();
            int o_id=Integer.parseInt((String) model.getValueAt(rowIndex,0));
                        
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String sql="SELECT staff.Staff_Name,customer.C_Name,item.I_Name,ord.O_Qnty,item.I_Selling_Price FROM staff,customer,item,ord WHERE customer.C_Id=ord.C_Id AND staff.Staff_Id=ord.Staff_Id AND item.I_Id=ord.I_Id AND ord.O_Id='"+o_id+"'";
            ResultSet rst=stm.executeQuery(sql);
 
            rst.next();
                       
            selected_id=o_id;
            selected_amount=Float.parseFloat(rst.getString("I_Selling_Price"));
            
            ord_staff_id.setSelectedItem(rst.getString("Staff_Name"));
            ord_c_id.setSelectedItem(rst.getString("C_Name"));
            ord_i_id.setSelectedItem(rst.getString("I_Name"));
            ord_qnty.setText(rst.getString("O_Qnty"));
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ord_tblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            float new_amount= Integer.parseInt(ord_qnty.getText())*selected_amount;
            String upd="UPDATE ord SET O_Qnty='"+ord_qnty.getText()+"',O_amount='"+new_amount+"' WHERE O_Id='"+selected_id+"'";
            stm.executeUpdate(upd);
            
            DefaultTableModel model1=(DefaultTableModel) ord_tbl.getModel();
            model1.setRowCount(0);
            fill_ord_tbl();
            
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ord_invActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_invActionPerformed
        
        if(this.selected_id>0){
            try {
                
                invoice inv=new invoice();
                inv.createINV(selected_id);

                
            } catch (ClassNotFoundException | SQLException | DocumentException ex) {
                Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table wich invoice should create");
        }
    }//GEN-LAST:event_ord_invActionPerformed

    private void ord_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ord_delActionPerformed
        
        try {
            
            int y=JOptionPane.showConfirmDialog(null,"Do you want to delete?","Conform delete",JOptionPane.YES_NO_OPTION);
        
     //   System.out.println("Value is="+y);
        
        if(y==0){
            
            if(this.selected_id>0){
                Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String del="DELETE FROM ord WHERE O_Id='"+selected_id+"'";
            stm.executeUpdate(del);
            
            DefaultTableModel model1=(DefaultTableModel) ord_tbl.getModel();
            model1.setRowCount(0);
            fill_ord_tbl();
            }        
        }else{
            JOptionPane.showMessageDialog(null, "Please select a row from the table wich should deleted");
        }
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ord_delActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_order().setVisible(true);
            }
        });
    }
    
    
    @SuppressWarnings("element-type-mismatch")
    
    public void fill_ord_c_id(){
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String sql="SELECT * FROM customer";
            ResultSet rst=stm.executeQuery(sql);
            
            
            while(rst.next()){
               
                ord_c_id.addItem(rst.getString("C_Name"));
                indx_cust.add(rst.getString("C_Id"));
                
            }
            con.close();
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    public void fill_ord_staff_id(){
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String sql="SELECT * FROM staff";
            ResultSet rst=stm.executeQuery(sql);
            
            
            while(rst.next()){
               
                ord_staff_id.addItem(rst.getString("Staff_Name"));
                indx_staff.add(rst.getString("Staff_Id"));
                
            }
            con.close();
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
     public void fill_ord_i_id(){
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String sql="SELECT * FROM item";
            ResultSet rst=stm.executeQuery(sql);
            
            
            while(rst.next()){
               
                ord_i_id.addItem(rst.getString("I_Name"));
                indx_item.add(rst.getString("I_Id"));
                
            }
           con.close();
           
           
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_order.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     
    public String getDate(){
    
        Date tdy=new Date();
        SimpleDateFormat dtformat=new SimpleDateFormat("yyyy-mm-dd");
        System.out.println(dtformat.format(tdy));
        return dtformat.format(tdy);

    }
    
    public float i_selling_price() throws ClassNotFoundException, SQLException{
        
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
            Statement stm=con.createStatement();
            String sql="SELECT I_Selling_Price FROM item WHERE I_Id='"+indx_item.get(ord_i_id.getSelectedIndex())+"'";
            ResultSet rst=stm.executeQuery(sql);
            rst.next();
            float amount=Float.parseFloat(rst.getString("I_Selling_Price"));
            
            con.close();
            
            return amount;
    
    }
    
    public float getTot() throws ClassNotFoundException, SQLException{
        
            int qun=Integer.parseInt(ord_qnty.getText());
            float amount=i_selling_price();
            
            return amount*qun;
    }
        
    public void setC_Id(){
        
        this.C_Id=Integer.parseInt(indx_cust.get(ord_c_id.getSelectedIndex()));
        
    }
    public void setStaff_Id(){
        
        this.Staff_Id=Integer.parseInt(indx_staff.get(ord_staff_id.getSelectedIndex()));
        
    }
    public void setI_Id(){
        
        this.I_Id=Integer.parseInt(indx_item.get(ord_i_id.getSelectedIndex()));
        
    }
    
    public void fill_ord_tbl() throws ClassNotFoundException, SQLException{
        
        Class.forName("com.mysql.jdbc.Driver");
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost/thasneema?useSSL=false","root","");
        Statement stm=con.createStatement();
        String fill="SELECT ord.O_Id,staff.Staff_Name,customer.C_Name,item.I_Name,item.I_Selling_Price,ord.O_Qnty,ord.O_date,ord.O_amount FROM staff,customer,item,ord WHERE customer.C_Id=ord.C_Id AND staff.Staff_Id=ord.Staff_Id AND item.I_Id=ord.I_Id";
        ResultSet rst=stm.executeQuery(fill);
        
           DefaultTableModel model=(DefaultTableModel)ord_tbl.getModel();
            
            Object[] row;
            
            while(rst.next()){
            
                row = new Object[8];
                
                row[0]=rst.getString("O_Id");
                row[1]=rst.getString("Staff_Name");
                row[2]=rst.getString("C_Name");
                row[3]=rst.getString("I_Name");
                row[4]=rst.getString("O_date");
                row[5]=rst.getString("O_Qnty");
                row[6]="*"+rst.getString("I_Selling_Price")+"=";
                row[7]="Rs."+rst.getString("O_amount")+"";                
                
                model.addRow(row);
                
            }
            con.close();
            

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ord_back;
    private javax.swing.JComboBox<String> ord_c_id;
    private javax.swing.JButton ord_del;
    private javax.swing.JButton ord_enter;
    private javax.swing.JComboBox<String> ord_i_id;
    private javax.swing.JButton ord_inv;
    private javax.swing.JTextField ord_qnty;
    private javax.swing.JComboBox<String> ord_staff_id;
    private javax.swing.JTable ord_tbl;
    // End of variables declaration//GEN-END:variables
}
